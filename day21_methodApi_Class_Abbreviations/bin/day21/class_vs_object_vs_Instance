[01] 객체지향 프로그램(OOP : Object Oriented Program)
	: Object - 틀	/	Oriented - 기반 / Program - 프로그램
	- 현실세계의 객체모델(모든것들)을 바탕으로 	프로그램을 구조화하고 개발하는 프로그래밍 기법

					class	 vs				 Object				vs 		Instance
		차이점:		설계도
										틀(실체화가 가능한 것)
																	 구현(실체화 한 것)
	________________________________________________________________________________________
	
		1. 객체모델링(설계
			클래스형태 :  멤버변수 + 멤버함수
						1. 멤버변수				name, kor, eng, math, total, avg
						2. 멤버함수(메서드)	 		총점구하기 / 평균구하기 / 출력
				- 작성하려는 추상적인 기능목록을 정리
				- 클래스의 형태를 만드는 것
				
		2. Interface						
			1) Object
				기능을 구현하지 않은 추상메서드들의 집합				
				public int total(kor, eng, math);
				public int avg(total);	
			2) 클래스 정의
				
		3. 객체 생성과 사용					
			1) 클래스 객체의 생성 - new를 통한 메모리 할당, 생성자를 호출		
		
		
class User001{
1. User001이라는 클래스 작성 [class(설계도 : starUML) - 
							object(실체화가 가능한 것 : interface, abstract class) - 
									instance(실체화 한 것 : new)]
	//1. 멤버변수
	이름 : String name ;
	나이 : int age;
	//2. 멤버함수
	void show() - 이름과 나이 출력
	
[연습문제] 클래스명 : Class002
1. MyPrice001라는 클래스 작성
	//1. 멤버변수
	제품이름 : String name
	제품가격 : int price
	//2. 멤버함수
	void show() - 이름과 가격 출력

ㅁ 출력내용
	노트: 20, 가격 : 100000